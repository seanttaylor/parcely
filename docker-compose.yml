version: "3.1"

services:
  parcely_core:
    container_name: parcely_core.api
    image: parcely_core:0.0.1
    command: npm start
    environment:
      - JWT_SECRET=superSecret
      - COMMIT_HASH=13626a216c8a4b38079d91a3750fa6c435adb0dd
      - HARDWARE_CRATE_SERVICE_URL=http://parcely_hw:3001
      - KAFKA_HOST_NAME=kafka
      - KAFKA_LOG_RETENTION_MS=10000
      - KAFKA_LOG_RETENTION_CHECK_INTERVAL_MS=5000
      - KAFKA_BOOTSTRAP_SERVER
      - KAFKA_CLUSTER_API_KEY
      - KAFKA_CLUSTER_SECRET
      - NODE_ENV
    ports:
      - 3000:3000
    volumes:
      - ./:/src
    networks:
      - shared_network
    depends_on: 
      - parcely_hw
  parcely_hw:
    container_name: parcely_hw.api
    image: parcely_hw:0.0.1
    environment:
      - COMMIT_HASH=13626a216c8a4b38079d91a3750fa6c435adb0dd
      - KAFKA_HOST_NAME=kafka
      - KAFKA_LOG_RETENTION_MS=10000
      - KAFKA_LOG_RETENTION_CHECK_INTERVAL_MS=5000
      - KAFKA_BOOTSTRAP_SERVER
      - KAFKA_CLUSTER_API_KEY
      - KAFKA_CLUSTER_SECRET
      - NODE_ENV
    ports:
      - 3001:3001
    volumes: 
      - ../parcely-hw/:/src
    networks:
      - shared_network
  #zookeeper:
  #  container_name: zookeeper
  #  image: wurstmeister/zookeeper
  #  ports:
  #    - 2181:2181
  #  networks:
  #    - shared_network
  #kafka:
  #  container_name: kafka
  #  image: wurstmeister/kafka
  #  depends_on: 
  #    - zookeeper
  #  ports:
  #    - 9092:9092
  #  environment: 
  #    KAFKA_ADVERTISED_HOST_NAME: kafka
  #    KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
  #    KAFKA_CREATE_TOPICS: "incoming_crate_telemetry:1:1"
    networks:
      - shared_network
networks:
  shared_network: