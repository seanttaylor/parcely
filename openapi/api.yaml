openapi: 3.0.0
info:
  description: API contract for the logistics platform
  version: 0.0.1
  title: Parcely
  contact:
    name: Platorm Engineering Team
    email: platform-eng@parcely.us
servers:
  - url: 'https://localhost:3000/api'
    description: Development server
tags:
  - name: crates
  - name: users
  - name: shipments
  - name: merchants
  - name: simulations
  - name: storage
paths:
  '/crates/{crateId}':
    get:
      summary: getCrateById
      operationId: getCrateById
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/crate'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      description: Get a specified crate by UUID
      tags:
        - crates
      parameters:
        - $ref: '#/components/parameters/authorization'
    parameters:
      - $ref: '#/components/parameters/crateId'
    post:
      summary: createCrate
      operationId: createCrate
      responses:
        '201':
          description: Created
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal Server Error
      parameters:
        - $ref: '#/components/parameters/authorization'
      description: Create a new crate
      tags:
        - crates
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/crate'
    delete:
      summary: deleteCrate
      operationId: deleteCrate
      tags:
        - crates
      responses:
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      parameters:
        - $ref: '#/components/parameters/authorization'
      description: Delete an existing crate
  /crates:
    get:
      operationId: getAllCrates
      description: Endpoint for fetching data about Parcely crates
      tags:
        - crates
      parameters: []
      responses:
        '200':
          description: OK
        '401':
          description: Forbidden
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      summary: getCrates
    parameters: []
  /users:
    get:
      summary: getAllUsers
      tags:
        - users
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      operationId: getAllUsers
      description: Get all platform users
      parameters:
        - $ref: '#/components/parameters/authorization'
    post:
      summary: createUser
      operationId: createUser
      responses:
        '201':
          description: Created
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
      description: Create a new platform user
      parameters:
        - $ref: '#/components/parameters/authorization'
      tags:
        - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/user'
  '/crates/{crateId}/shipments':
    parameters:
      - $ref: '#/components/parameters/crateId'
    get:
      summary: getShipmentsByCrateId
      operationId: getShipmentsByCrateId
      description: Get a list of crate shipments by crate UUID
      tags:
        - crates
        - shipments
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      parameters:
        - $ref: '#/components/parameters/authorization'
    post:
      summary: startCrateShipment
      operationId: startCrateShipment
      tags:
        - crates
        - shipments
      responses:
        '201':
          description: Created
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      description: Initializes a new shipment for the specified crate
      parameters:
        - $ref: '#/components/parameters/authorization'
      requestBody:
        content:
          application/json:
            schema:
              description: ''
              type: object
              properties:
                originAddress:
                  type: object
                  required:
                    - street
                    - apartmentNumber
                    - city
                    - state
                    - zip
                  properties:
                    street:
                      type: string
                    apartmentNumber:
                      type: string
                    city:
                      type: string
                    state:
                      type: string
                    zip:
                      type: string
                destinationAddress:
                  type: object
                  required:
                    - street
                    - city
                    - state
                    - zip
                  properties:
                    street:
                      type: string
                    city:
                      type: string
                    state:
                      type: string
                    zip:
                      type: string
                    apartmentNumber:
                      type: string
                trackingNumber:
                  type: string
              required:
                - originAddress
                - destinationAddress
                - trackingNumber
        description: A shipment request
  '/crates/shipments/{shipmentId}':
    parameters:
      - $ref: '#/components/parameters/shipmentId'
    get:
      summary: getCrateShipmentById
      operationId: getCrateShipmentById
      description: Get a specified crate shipment by id
      tags:
        - crates
        - shipments
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      parameters:
        - $ref: '#/components/parameters/authorization'
  '/users/{userId}/crates':
    parameters:
      - $ref: '#/components/parameters/userId'
    get:
      summary: getCratesByRecipient
      operationId: getCratesByRecipient
      description: Get all crates associated with a platform user
      tags:
        - crates
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      parameters:
        - $ref: '#/components/parameters/authorization'
  /status:
    get:
      summary: getSystemStatus
      tags: []
      responses:
        '200':
          description: OK
        '500':
          description: Internal Server Error
        '503':
          description: Service Unavailable
      operationId: getSystemStatus
      description: Verify system status (i.e. is it up?)
      requestBody:
        content:
          application/json:
            schema:
              description: ''
              type: object
              properties:
                commitHash:
                  type: string
                status:
                  type: string
              required:
                - commitHash
                - status
            examples:
              example-1:
                value:
                  commitHash: 585fb57f540a62db9a6cb29bc6d67a0a0def7bb8
                  status: OK
        description: Status object returned from system including last commit hash from Git.
  '/users/{userId}/password':
    parameters:
      - $ref: '#/components/parameters/userId'
    put:
      summary: resetPassword
      operationId: resetPassword
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      description: Triggers a password reset email
      tags:
        - users
      parameters:
        - $ref: '#/components/parameters/authorization'
  '/users/{userId}/name':
    parameters:
      - schema:
          type: string
        name: userId
        in: path
        required: true
    put:
      summary: editName
      operationId: editUserName
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      description: Update the first and/or last name of a platform user
      tags:
        - users
      parameters:
        - $ref: '#/components/parameters/authorization'
      requestBody:
        content:
          application/json:
            schema:
              description: ''
              type: object
              properties:
                firstName:
                  type: string
                lastName:
                  type: string
            examples:
              example-1:
                value:
                  firstName: Tony
                  lastName: Stark
  '/users/{userId}/phone':
    parameters:
      - $ref: '#/components/parameters/userId'
    put:
      summary: editPhoneNumber
      operationId: editPhoneNumber
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      description: Update phone number of platform user
      parameters:
        - $ref: '#/components/parameters/authorization'
      requestBody:
        content:
          application/json:
            schema:
              description: ''
              type: object
              properties:
                phoneNumber:
                  type: string
              required:
                - phoneNumber
            examples:
              example-1:
                value:
                  phoneNumber: '2125552424'
      tags:
        - users
  '/users/{userId}/email':
    parameters:
      - $ref: '#/components/parameters/userId'
    put:
      summary: editEmailAddress
      operationId: editEmailAddress
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      tags:
        - users
      description: Update email address of platform user
      parameters:
        - $ref: '#/components/parameters/authorization'
      requestBody:
        content:
          application/json:
            schema:
              description: ''
              type: object
              properties:
                emailAddress:
                  type: string
              required:
                - emailAddress
            examples:
              example-1:
                value:
                  emailAddress: tstark@avengers.io
  '/users/{userId}/shipments':
    parameters:
      - $ref: '#/components/parameters/userId'
    get:
      summary: getUserShipmentHistory
      tags:
        - users
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      operationId: getUserShipmentHistory
      description: Get a list of all crate shipments for a specified platform user
      parameters:
        - $ref: '#/components/parameters/authorization'
        - schema:
            type: string
          in: query
          name: status
          description: Filter param for shipments (e.g. 'intransit')
  '/crates/{crateId}/shipments/{shipmentId}/waypoints':
    parameters:
      - $ref: '#/components/parameters/crateId'
      - $ref: '#/components/parameters/shipmentId'
    post:
      summary: addShipmentWaypoint
      tags:
        - crates
      responses:
        '201':
          description: Created
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      operationId: addShipmentWaypoint
      parameters:
        - $ref: '#/components/parameters/authorization'
      description: Add a new waypoint to a shipment in progress
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/telemetry'
      deprecated: true
  /crates/telemetry/rt-updates:
    post:
      tags:
        - crates
      summary: receiveRealTimeUpdate
      operationId: receiveRealTimeUpdate
      responses:
        '204':
          description: No Content
      description: Adds a new waypoint to a shipment in progress
      parameters:
        - $ref: '#/components/parameters/authorization'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                crateId:
                  $ref: '#/components/schemas/crateId'
                telemetry:
                  $ref: '#/components/schemas/telemetry'
  '/crates/{crateId}/recipient':
    parameters:
      - $ref: '#/components/parameters/crateId'
    put:
      summary: setCrateRecipient
      operationId: setCrateRecipient
      tags:
        - crates
        - shipments
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      description: Associates the crate with a recipient user in the data store
      requestBody:
        content:
          application/json:
            schema:
              description: ''
              type: object
              properties:
                recipientId:
                  type: string
              required:
                - recipientId
      parameters:
        - $ref: '#/components/parameters/authorization'
  '/crates/{crateId}/shipments/{shipmentId}/status/complete':
    parameters:
      - $ref: '#/components/parameters/crateId'
      - $ref: '#/components/parameters/shipmentId'
    post:
      summary: completeCrateShipment
      operationId: completeCrateShipment
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      description: Completes an existing shipment for the current crate; crate shipment data becomes read-only
      tags:
        - crates
      parameters:
        - $ref: '#/components/parameters/authorization'
  '/crates/{crateId}/status/pending-return':
    parameters:
      - name: crateId
        in: path
        required: true
        schema:
          type: string
        description: The uuid for a crate
    put:
      summary: markCrateReturned
      tags:
        - crates
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      operationId: markCrateReturned
      description: Set a crate's status to indicate a pending return
      parameters:
        - $ref: '#/components/parameters/authorization'
  '/users/{userId}':
    parameters:
      - $ref: '#/components/parameters/userId'
    get:
      summary: getUserById
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/user'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      operationId: get-users-userId
      description: getUserById
      parameters:
        - $ref: '#/components/parameters/authorization'
  '/users/email-exists/{emailAddress}':
    parameters:
      - schema:
          type: string
        name: emailAddress
        in: path
        description: A user email address
        required: true
    get:
      summary: verifyEmailExists
      tags: []
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      operationId: verifyEmailExists
      description: Verify a specified email address exists on the platform
      parameters:
        - $ref: '#/components/parameters/authorization'
  /users/token:
    get:
      summary: getUserAccessToken
      tags: []
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      operationId: getUserAccessToken
      description: Get a credential for an existing user
      requestBody:
        content:
          application/json:
            schema:
              description: ''
              type: object
              properties:
                emailAddress:
                  type: string
                  minLength: 1
                password:
                  type: string
                  minLength: 1
              required:
                - emailAddress
                - password
            examples: {}
  /merchants:
    get:
      summary: createMerchant
      tags:
        - merchants
      responses:
        '201':
          description: Created
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal Server Error
      operationId: createMerchant
      description: Creates a new Merchant on the platform
      parameters:
        - $ref: '#/components/parameters/authorization'
  '/merchants/{merchantId}':
    parameters:
      - schema:
          type: string
        name: merchantId
        in: path
        required: true
    get:
      summary: getMerchantById
      tags:
        - merchants
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      operationId: getMerchantById
      description: Get a Merchant registered on the platform by uuid
      parameters:
        - $ref: '#/components/parameters/authorization'
  '/merchants/{merchantId}/crates':
    parameters:
      - schema:
          type: string
        name: merchantId
        in: path
        required: true
    get:
      summary: getCratesByMerchant
      operationId: getCratesByMerchant
      tags:
        - merchants
      description: Get all crates associated with a specified merchant
      parameters:
        - $ref: '#/components/parameters/authorization'
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
  '/merchants/{merchantId}/plan':
    parameters:
      - $ref: '#/components/parameters/merchantId'
    put:
      summary: updateMerchantPlan
      tags:
        - merchants
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      operationId: updateMerchantPlan
      description: Update an existing merchant's plan
      parameters:
        - $ref: '#/components/parameters/authorization'
  '/merchants/{merchantId}/status/archived':
    parameters:
      - schema:
          type: string
        name: merchantId
        in: path
        required: true
    post:
      summary: archiveMerchant
      tags:
        - merchants
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      operationId: archiveMerchant
      description: Archives a registered Merchant on the platform
      parameters:
        - $ref: '#/components/parameters/authorization'
  '/merchants/{merchantId}/plan/cancel':
    parameters:
      - schema:
          type: string
        name: merchantId
        in: path
        required: true
    post:
      summary: cancelMerchantPlan
      tags:
        - merchants
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      operationId: cancelMerchantPlan
      description: Cancels an existing Merchant's plan
      parameters:
        - $ref: '#/components/parameters/authorization'
  /storage/buckets:
    get:
      summary: getStorageBuckets
      tags:
        - storage
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties: {}
        '500':
          description: Internal Server Error
      operationId: getStorageBuckets
      description: Get a list of all storage buckets
      parameters:
        - $ref: '#/components/parameters/authorization'
  '/storage/buckets/{bucketId}':
    parameters:
      - $ref: '#/components/parameters/bucketId'
    get:
      summary: getStorageBucketById
      tags:
        - storage
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties: {}
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      operationId: getStorageBucketById
      description: Get a specified storage bucket
      parameters:
        - $ref: '#/components/parameters/authorization'
  '/storage/{bucketId}/{bucketItemId}':
    parameters:
      - $ref: '#/components/parameters/bucketId'
      - schema:
          type: string
        name: bucketItemId
        in: path
        required: true
        description: The uuid for a storage bucket item
    get:
      summary: getStorageBucketItemById
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties: {}
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      operationId: getStorageBucketItemById
      description: Get a specified storage bucket item
      tags:
        - storage
  /crates/telemetry/rt-updates/subscribe:
    get:
      summary: subscribeToRealtimeUpdates
      tags: []
      responses:
        '200':
          description: OK
          headers:
            connection:
              schema:
                type: string
            cache-control:
              schema:
                type: string
            content-type:
              schema:
                type: string
      operationId: subscribeToRealtimeUpdates
      description: Receive real-time updates via Server-Sent Events
      parameters: []
  '/merchants/{merchantId}/shipments':
    parameters:
      - schema:
          type: string
        name: merchantId
        in: path
        required: true
    get:
      summary: getShipmentsByMerchantId
      tags:
        - merchants
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      operationId: getShipmentsByMerchantId
      description: Get a list of all shipments associated with a specified Merchant
  '/merchants/{merchantId}/shipments/{shipmentId}':
    parameters:
      - schema:
          type: string
        name: merchantId
        in: path
        required: true
      - schema:
          type: string
        name: shipmentId
        in: path
        required: true
    get:
      summary: getMerchantShipmentById
      tags: []
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      operationId: getMerchantShipmentById
      description: Get a specified merchant shipment
      parameters:
        - $ref: '#/components/parameters/authorization'
  '/merchants/{merchantId}/shipments/{shipmentId}/waypoints':
    get:
      summary: getShipmentWaypoints
      tags: []
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      operationId: getShipmentWaypoints
      description: Get a list of waypoints associated with a specified shipment
      parameters:
        - $ref: '#/components/parameters/authorization'
    parameters:
      - $ref: '#/components/parameters/merchantId'
      - $ref: '#/components/parameters/shipmentId'
  '/simulations/{simulationId}':
    get:
      summary: getSimulationById
      tags:
        - simulations
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      operationId: getSimulationById
      description: Get a specified crate simulation
      parameters:
        - $ref: '#/components/parameters/authorization'
    parameters:
      - $ref: '#/components/parameters/simulationId'
  '/simulations/{simulationId}/end':
    parameters:
      - $ref: '#/components/parameters/simulationId'
    post:
      summary: endSimulationById
      tags:
        - simulations
      responses:
        '204':
          description: No Content
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      operationId: endSimulationById
      description: End a specified simulation run
      parameters:
        - $ref: '#/components/parameters/authorization'
  '/simulations/{simulationId}/start':
    parameters:
      - $ref: '#/components/parameters/simulationId'
    post:
      summary: startSimulationById
      tags:
        - simulations
      responses:
        '204':
          description: No Content
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      operationId: startSimulationById
      description: Start a specified simulation run
      parameters:
        - $ref: '#/components/parameters/authorization'
  /simulations:
    post:
      summary: createSimulation
      tags:
        - simulations
      responses:
        '201':
          description: Created
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
      operationId: createSimulation
      description: Create a new simulation run
      parameters:
        - $ref: '#/components/parameters/authorization'
components:
  schemas:
    crateId:
      type: string
    crate:
      description: The Crate schema
      type: object
      properties:
        id:
          type: string
        size:
          type: string
        tripId:
          type: string
        merchantId:
          type: string
        lastPing:
          type: string
        telemetry:
          $ref: '#/components/schemas/telemetry'
      required:
        - id
        - size
        - tripId
        - merchantId
        - lastPing
        - telemetry
      x-examples:
        example-1:
          id: 2055c145-7d3e-446c-a7ad-ae6aaf886335
          size: L
          tripId: 172b101d-3d24-4172-8e9d-2c34beb9c07f
          merchantId: e3634bd2-7cb4-45b7-a442-f38ee4ad008b
          lastPing: '2021-02-24T19:04:33.436344'
          telemetry:
            temp:
              degreesFahrenheit: '68'
            location:
              coords:
                lat: 40.7128 N
                long: 74.0060 W
              zip: 40508-0000
            sensors:
              moisture:
                thresholdExceeded: true
              thermometer:
                thresholdExceeded: false
              photometer:
                thresholdExceeded: false
      title: ''
    user:
      description: The User schema
      type: object
      x-examples:
        example-1:
          id: fee7b553-f3d1-4a6f-82ae-7e37e1ed697c
          firstName: Nick
          lastName: Fury
          phoneNumber: '2125552424'
          emailAddress: nfury@shield.gov
          password: superSecretPassword
          createdDate: '2021-02-24T17:45:36.230152'
          lastModified: '2021-01-24T17:45:36.230152'
      properties:
        id:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        phoneNumber:
          type: string
        emailAddress:
          type: string
        password:
          type: string
        createdDate:
          type: string
        lastModified:
          type: string
      required:
        - id
        - lastName
        - phoneNumber
        - emailAddress
        - password
    shipment:
      description: The Shipment schema
      type: object
      properties:
        id:
          type: string
        departureTimestamp:
          type: string
        departureZip:
          type: string
        arrivalTimestamp:
          type: string
        arrivalZip:
          type: string
        trackingNumber:
          type: string
        tripLengthMiles:
          type: string
        waypoints:
          type: array
          uniqueItems: true
          minItems: 1
          items:
            required:
              - timestamp
              - zip
            properties:
              timestamp:
                type: string
              zip:
                type: string
              telemetry:
                $ref: '#/components/schemas/telemetry'
      required:
        - id
        - departureTimestamp
        - departureZip
        - arrivalZip
        - trackingNumber
        - tripLengthMiles
        - waypoints
      x-examples:
        example-1:
          id: d54cc57f-c32c-454a-a295-6481f126eb8b
          departureTimestamp: '2018-06-13T10:11:13+05:30'
          departureZip: 11249-1005
          arrivalTimestamp: null
          arrivalZip: 40511-2345
          trackingNumber: 1Z54F78A0450293517
          tripLengthMiles: '706.4'
          waypoints:
            - timestamp: '2018-06-13T12:11:13+05:30'
              zip: 40508-0000
              telemetry:
                temp:
                  degreesFahrenheit: '68'
                location:
                  coords:
                    lat: 40.7128 N
                    long: 74.0060 W
                  zip: 40508-0000
                sensors:
                  moisture:
                    thresholdExceeded: true
                  thermometer:
                    thresholdExceeded: false
                  photometer:
                    thresholdExceeded: false
      title: ''
    telemetry:
      description: An update received by the real-time telemetry API
      type: object
      properties:
        telemetry:
          type: object
          properties:
            temp:
              type: object
              properties:
                degreesFahrenheit:
                  type: string
              required:
                - degreesFahrenheit
            location:
              type: object
              properties:
                coords:
                  type: object
                  properties:
                    lat:
                      type: string
                    long:
                      type: string
                  required:
                    - lat
                    - long
                zip:
                  type: string
              required:
                - coords
                - zip
            sensors:
              type: object
              properties:
                moisture:
                  type: object
                  properties:
                    thresholdExceeded:
                      type: boolean
                  required:
                    - thresholdExceeded
                thermometer:
                  type: object
                  properties:
                    thresholdExceeded:
                      type: boolean
                  required:
                    - thresholdExceeded
                photometer:
                  type: object
                  properties:
                    thresholdExceeded:
                      type: boolean
                  required:
                    - thresholdExceeded
              required:
                - moisture
                - thermometer
                - photometer
          required:
            - temp
            - location
            - sensors
      required:
        - telemetry
      title: telemetry
      x-examples: {}
  parameters:
    authorization:
      name: authorization
      in: header
      description: Authorization credential for this endpoint
      schema:
        type: string
      required: true
    userId:
      name: userId
      in: path
      schema:
        type: string
      description: The uuid for a user
      required: true
    merchantId:
      name: merchantId
      in: path
      schema:
        type: string
      description: The uuid for a merchant
      required: true
    simulationId:
      name: simulationId
      in: path
      schema:
        type: string
      description: The uuid for a simulation
      required: true
    crateId:
      name: crateId
      in: path
      required: true
      schema:
        type: string
      description: The uuid for a crate
    shipmentId:
      name: shipmentId
      in: path
      required: true
      schema:
        type: string
      description: The uuid for a shipment
    bucketId:
      name: bucketId
      in: path
      required: true
      schema:
        type: string
      description: The uuid for a storage bucket
  securitySchemes: {}
